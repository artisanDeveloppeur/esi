/*! SASS #base grid */

// https://ishadeed.com/article/responsive-design/ The Guide To Responsive Design In 2023 and Beyond

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))

//------------------------------------------------------------------------------------------------
//MODULE VARIABLES
//------------------------------------------------------------------------------------------------
//BREAKPOINTS-----------------------------------
$screen-sizes: (
  "xs": ("breakpoint": 0,
    "container-size": 100%,
  ),
  "sm": ("breakpoint": 576px,
    "container-size": 90%,
  ),
  "md": ("breakpoint": 768px,
    "container-size": 90%,
  ),
  "lg": ("breakpoint": 992px,
    "container-size": 80%,
  ),
  "xl": ("breakpoint": 1200px,
    "container-size": 80%,
  ),
  "xxl": ("breakpoint": 1400px,
    "container-size": 70%,
  ),
);

/*
  .modules/_grid.scss
  Module de la grille
 */

//------------------------------------------------------------------------------------------------
//MODULE VARIABLE
//------------------------------------------------------------------------------------------------
$gridNbRepeat: 12;
$gridColSpan: 12;
$gridRowSpan: 1;

$gridGapV: 1rem;
$gridGapH: 1rem;

//------------------------------------------------------------------------------------------------
//MODULE SPECIFICATIONS
//------------------------------------------------------------------------------------------------
// MODULE DE LA GRILLE ---------------------

.grid {
  display: grid;
  grid-template-columns: repeat($gridNbRepeat, 1fr);
  gap: $gridGapV $gridGapH;

  &.grid-noGap {
    gap: 0 0;
  }

  >* {
    grid-column: span $gridColSpan;
    grid-row: span $gridRowSpan;
  }
}

// BOUCLE DE LA GRILLE
@each $size,
$values in $screen-sizes {
  @media screen and (min-width: map-get($values, "breakpoint")) {
    .container-grid {
      width: 100%;
      max-width: map-get($values, "container-size");
      margin: auto;
    }

    @for $i from 1 through 12 {
      .col-#{$size}-#{$i} {
        grid-column: span + " " + $i;
      }

      .row-#{$size}-#{$i} {
        grid-row: span + " " + $i;
      }
    }
  }
}